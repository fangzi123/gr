<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 缓存管理器 -->
	<bean id="cacheManager" class="com.cyou.gr.memSession.ShiroCacheManager">
		 <property name="simpleCacheManager" ref="simpleCacheManager" />  
	</bean>
	<!-- 扩展缓存管理器 -->  
    <bean id="simpleCacheManager"  
        class="com.cyou.gr.memSession.SimpleCacheManagerImpl">  
        <constructor-arg ref="memcachedClient" />  
    </bean>  
    <!-- Realm实现 -->
    <bean id="shiroDbRealm" class="com.cyou.gr.web.shiro.ShiroDbRealm">
    </bean>

    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="2592000"/><!-- 30天 -->
    </bean>

    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

 	<bean id="sessionManager"
        class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionDAO" ref="memSessionDAO" />
        <property name="sessionIdCookie" ref="memSession"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
    </bean>
    <bean id="memSessionDAO" class="com.cyou.gr.memSession.MemSessionDAO">
        <property name="keyPrefix" value="shiro_session:"/>
    </bean>
    <bean id="memSession" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg name="name" value="memSESSION"/>
    </bean>
    <bean id="sessionValidationScheduler"
      class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
        <property name="interval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>
    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="cacheManager" ref="cacheManager"/>
        <property name="realm" ref="shiroDbRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>
 	<!-- 基于Form表单的身份验证过滤器 -->
    <bean id="formAuthenticationFilter" class="com.cyou.gr.jcaptcha.MyFormAuthenticationFilter">
        <property name="usernameParam" value="name"/>
        <property name="passwordParam" value="password"/>
        <property name="rememberMeParam" value="rememberMe"/>
        <property name="loginUrl" value="/"/>
        <property name="failureKeyAttribute" value="shiroLoginFailure"/>
    </bean>
    <bean id="sslFilter" class="org.apache.shiro.web.filter.authz.SslFilter">
		<property name="port" value="8443"/>
	</bean>
	<!-- 并发登录人数控制 -->
	<bean id="kickoutSessionControlFilter"
		class="com.cyou.gr.web.shiro.filter.KickoutSessionControlFilter">
		<property name="cacheManager" ref="cacheManager"/>
		<property name="sessionManager" ref="sessionManager"/>
		<property name="kickoutAfter" value="false"/>
		<property name="maxSession" value="1"/>
		<property name="kickoutUrl" value="/"/>
	</bean>
	<!-- 验证码 -->
	<bean id="jCaptchaValidateFilter" class="com.cyou.gr.jcaptcha.JCaptchaValidateFilter">
        <property name="jcaptchaEbabled" value="true"/>
        <property name="jcaptchaParam" value="jcaptchaCode"/>
        <property name="failureKeyAttribute" value="shiroLoginFailure"/>
    </bean>
    <!-- 在线会话管理 -->
    <bean id="forceLogoutFilter" class="com.cyou.gr.web.shiro.filter.ForceLogoutFilter"/>
    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/"/>
        <property name="successUrl" value="/gr/index"/>
        <property name="unauthorizedUrl" value="/unauthorized.jsp"/>
        <property name="filters">
            <map>
				<entry key="authc" value-ref="formAuthenticationFilter"/>
				<entry key="ssl" value-ref="sslFilter"/>
				<entry key="kickout" value-ref="kickoutSessionControlFilter"/>
				<entry key="jCaptchaValidate" value-ref="jCaptchaValidateFilter"/>
				<entry key="forceLogout" value-ref="forceLogoutFilter"/>
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /resources/** = anon
                /jcaptcha.jpg = anon
                /oauth2Failure.jsp = anon
                /unauthorized.jsp = anon
                / = jCaptchaValidate,authc
                /logout = logout
                /rights/**=user,roles[admin]
                /quota/**=user,roles[admin]
                /project/**=user,roles[admin]
                /process/**=user,roles[admin]
                /** = forceLogout,user
            </value>
        </property>
    </bean>

    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <!-- AOP式方法级权限检查 -->
    <bean
        class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
        depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true" />
    </bean>
    <bean
        class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager" />
    </bean>
</beans>