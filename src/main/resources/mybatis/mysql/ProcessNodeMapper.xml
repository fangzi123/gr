<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cyou.gr.dao.ProcessNodeMapper">
  <resultMap id="BaseResultMap" type="com.cyou.gr.entity.ProcessNode">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="process_id" jdbcType="INTEGER" property="processId" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="process_type" jdbcType="CHAR" property="processType" />
    <result column="end_type" jdbcType="CHAR" property="endType" />
    <result column="time_type" jdbcType="CHAR" property="timeType" />
    <result column="flag" jdbcType="BIT" property="flag" />
    <result column="has_fee" jdbcType="BIT" property="hasFee" />
    <result column="has_manPower" jdbcType="BIT" property="hasManpower" />
    <result column="has_taskBook" jdbcType="BIT" property="hasTaskbook" />
    <result column="has_checkBill" jdbcType="BIT" property="hasCheckbill" />
    <result column="has_document" jdbcType="BIT" property="hasDocument" />
    <result column="nodes_overview" jdbcType="VARCHAR" property="nodesOverview" />
    <association javaType="com.cyou.gr.entity.Process" property="process">
			<id column="pid" jdbcType="INTEGER" property="id" />
			<result column="pname" jdbcType="VARCHAR" property="name" />
	</association>
  </resultMap>
  
  <resultMap id="pnResultMap" type="com.cyou.gr.entity.ProcessNode" extends="BaseResultMap">
  		<collection property="feetList" ofType="com.cyou.gr.entity.FeeTemplate" columnPrefix="ft_">
		    <id property="id" column="id"/>
		    <result column="process_node_id" property="processNodeId"/>
		    <result property="name" column="name"/>
		    <result property="sort" column="sort"/>
		    <result property="flag" column="flag"/>
		</collection>
  		<collection property="mantList" ofType="com.cyou.gr.entity.ManpowerTemplate" columnPrefix="mant_">
		   	<id column="id" property="id"  />
		    <result column="process_node_id" property="processNodeId"  />
		    <result column="project_team" property="projectTeam"  />
		    <result column="standard_model" property="standardModel"  />
		    <result column="sort" property="sort"  />
	     	<result column="flag" property="flag" />
		</collection>
  		<collection property="tbtList" ofType="com.cyou.gr.entity.TaskBookTemplate" columnPrefix="tbt_">
  		 	<id column="id" property="id"  />
		    <result column="process_node_id" property="processNodeId"  />
		    <result column="quota_name" property="quotaName"  />
		    <result column="quota_type" property="quotaType"/>
		    <result column="sort" property="sort"  />
		    <result column="flag" property="flag" />
		</collection>
  		<collection property="cbtList" ofType="com.cyou.gr.entity.CheckbillTemplate" columnPrefix="cbt_">
			<id column="id" property="id"  />
		    <result column="process_node_id" property="processNodeId"  />
		    <result column="check_item" property="checkItem"  />
		    <result column="check_item_property" property="checkItemProperty" />
		    <result column="remark" property="remark"  />
		    <result column="isqualified" property="isqualified"  />
		    <result column="sort" property="sort"  />
		    <result column="flag" property="flag" />
		</collection>
  </resultMap>
  <sql id="Base_Column_List">
    id, name, process_id, sort, process_type, end_type, time_type, flag, has_fee, has_manPower, 
    has_taskBook, has_checkBill, has_document, nodes_overview
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
   select pn.*,
		p.id pid,p.name pname
		from process_node pn
		left join process p on p.id=pn.process_id
		where pn.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from process_node
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cyou.gr.entity.ProcessNode">
    insert into process_node (id, name, process_id, 
      sort, process_type, end_type, 
      time_type, flag, has_fee, has_manPower, 
      has_taskBook, has_checkBill, has_document, 
      nodes_overview)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{processId,jdbcType=INTEGER}, 
      #{sort,jdbcType=INTEGER}, #{processType,jdbcType=CHAR}, #{endType,jdbcType=CHAR}, 
      #{timeType,jdbcType=CHAR}, #{flag,jdbcType=BIT}, #{hasFee,jdbcType=BIT}, #{hasManpower,jdbcType=BIT}, 
      #{hasTaskbook,jdbcType=BIT}, #{hasCheckbill,jdbcType=BIT}, #{hasDocument,jdbcType=BIT}, 
      #{nodesOverview,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cyou.gr.entity.ProcessNode">
    insert into process_node
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="processId != null">
        process_id,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="processType != null">
        process_type,
      </if>
      <if test="endType != null">
        end_type,
      </if>
      <if test="timeType != null">
        time_type,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="hasFee != null">
        has_fee,
      </if>
      <if test="hasManpower != null">
        has_manPower,
      </if>
      <if test="hasTaskbook != null">
        has_taskBook,
      </if>
      <if test="hasCheckbill != null">
        has_checkBill,
      </if>
      <if test="hasDocument != null">
        has_document,
      </if>
      <if test="nodesOverview != null">
        nodes_overview,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="processId != null">
        #{processId,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="processType != null">
        #{processType,jdbcType=CHAR},
      </if>
      <if test="endType != null">
        #{endType,jdbcType=CHAR},
      </if>
      <if test="timeType != null">
        #{timeType,jdbcType=CHAR},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=BIT},
      </if>
      <if test="hasFee != null">
        #{hasFee,jdbcType=BIT},
      </if>
      <if test="hasManpower != null">
        #{hasManpower,jdbcType=BIT},
      </if>
      <if test="hasTaskbook != null">
        #{hasTaskbook,jdbcType=BIT},
      </if>
      <if test="hasCheckbill != null">
        #{hasCheckbill,jdbcType=BIT},
      </if>
      <if test="hasDocument != null">
        #{hasDocument,jdbcType=BIT},
      </if>
      <if test="nodesOverview != null">
        #{nodesOverview,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cyou.gr.entity.ProcessNode">
    update process_node
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="processId != null">
        process_id = #{processId,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="processType != null">
        process_type = #{processType,jdbcType=CHAR},
      </if>
      <if test="endType != null">
        end_type = #{endType,jdbcType=CHAR},
      </if>
      <if test="timeType != null">
        time_type = #{timeType,jdbcType=CHAR},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=BIT},
      </if>
      <if test="hasFee != null">
        has_fee = #{hasFee,jdbcType=BIT},
      </if>
      <if test="hasManpower != null">
        has_manPower = #{hasManpower,jdbcType=BIT},
      </if>
      <if test="hasTaskbook != null">
        has_taskBook = #{hasTaskbook,jdbcType=BIT},
      </if>
      <if test="hasCheckbill != null">
        has_checkBill = #{hasCheckbill,jdbcType=BIT},
      </if>
      <if test="hasDocument != null">
        has_document = #{hasDocument,jdbcType=BIT},
      </if>
      <if test="nodesOverview != null">
        nodes_overview = #{nodesOverview,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cyou.gr.entity.ProcessNode">
    update process_node
    set name = #{name,jdbcType=VARCHAR},
      process_id = #{processId,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      process_type = #{processType,jdbcType=CHAR},
      end_type = #{endType,jdbcType=CHAR},
      time_type = #{timeType,jdbcType=CHAR},
      flag = #{flag,jdbcType=BIT},
      has_fee = #{hasFee,jdbcType=BIT},
      has_manPower = #{hasManpower,jdbcType=BIT},
      has_taskBook = #{hasTaskbook,jdbcType=BIT},
      has_checkBill = #{hasCheckbill,jdbcType=BIT},
      has_document = #{hasDocument,jdbcType=BIT},
      nodes_overview = #{nodesOverview,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
	<select id="selectProcNodeListByProcId" parameterType="java.lang.Integer" resultMap="pnResultMap">
		select
	    	pcn.*
	    	,ft.id   ft_id
	    	,mant.id mant_id
	    	,tbt.id  tbt_id
	    	,cbt.id  cbt_id
		from process_node pcn
			left join fee_template       ft   on ft.process_node_id=pcn.id   and ft.flag=1
			left join manpower_template  mant on mant.process_node_id=pcn.id and mant.flag=1
			left join task_book_template tbt  on tbt.process_node_id=pcn.id  and tbt.flag=1
			left join checkbill_template cbt  on cbt.process_node_id=pcn.id  and cbt.flag=1
		where pcn.process_id = #{procId,jdbcType=INTEGER} 
			  and pcn.flag=1
			  order by pcn.sort,ft.sort,mant.sort,tbt.sort,cbt.sort
	</select>
	<select id="selectMaxSort" resultType="java.lang.Integer">
		select IFNULL(max(sort)+1,0) from process_node
	</select>
</mapper>